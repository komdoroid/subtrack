// This rule allows anyone with your Firestore database reference to view, edit,
// and delete all data in your Firestore database. It is useful for getting
// started, but it is configured to expire after 30 days because it
// leaves your app open to attackers. At that time, all client
// requests to your Firestore database will be denied.
//
// Make sure to write security rules for your app before that time, or else
// all client requests to your Firestore database will be denied until you Update
// your rules
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // 認証ユーザー本人のサブスクリプションのみアクセス可能
    match /subscriptions/{subscriptionId} {
      allow read, update, delete: if isOwner();
      allow create: if isCreatingOwnSubscription();
    }

    // 自分のユーザープロフィールにのみアクセス可
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
    }

    // 上記以外は拒否（開発用パスは含めない）
    match /{document=**} {
      allow read, write: if false;
    }

    // 共通関数定義
    function isOwner() {
      return request.auth != null && request.auth.uid == resource.data.userId;
    }

    function isCreatingOwnSubscription() {
      return request.auth != null &&
             request.auth.uid == request.resource.data.userId &&
             request.resource.data.keys().hasAll(['name', 'price', 'category', 'userId']) &&
             request.resource.data.price is number;
    }
  }
}
